Published as a conference paper at ICLR 2020
BERTSCORE: EVALUATING TEXT GENERATION WITH
BERT
Tianyi Zhang∗†‡⋄, Varsha Kishore∗‡, Felix Wu∗‡, Kilian Q. Weinberger†‡⋄, and Yoav Artzi‡§
‡Department of Computer Science and §Cornell Tech, Cornell University
{vk352, fw245, kilian}@cornell.edu
{yoav}@cs.cornell.edu
⋄ASAPP Inc. tzhang@asapp.com
ABSTRACT
We propose BERTSCORE, an automatic evaluation metric for text generation.
Analogously to common metrics, BERTSCORE computes a similarity score for each token in the candidate sentence with each token in the reference sentence.
However, instead of exact matches, we compute token similarity using contextual embeddings. We evaluate using the outputs of 363 machine translation and image captioning systems. BERTSCORE correlates better with human judgments and provides stronger model selection performance than existing metrics. Finally, we use an adversarial paraphrase detection task to show that BERTSCORE is more robust to challenging examples when compared to existing metrics.
INTRODUCTION
Automatic evaluation of natural language generation, for example in machine translation and caption generation, requires comparing candidate sentences to annotated references. The goal is to evaluate semantic equivalence. However, commonly used methods rely on surface-form similarity only. For example, BLEU (Papineni et al., 2002), the most common machine translation metric, simply counts n-gram overlap between the candidate and the reference. While this provides a simple and general measure, it fails to account for meaning-preserving lexical and compositional diversity.
In this paper, we introduce BERTSCORE, a language generation evaluation metric based on pretrained BERT contextual embeddings (Devlin et al., 2019). BERTSCORE computes the similarity of two sentences as a sum of cosine similarities between their tokens' embeddings.
BERTSCORE addresses two common pitfalls in n-gram-based metrics (Banerjee & Lavie, 2005).
First, such methods often fail to robustly match paraphrases. For example, given the reference people like foreign cars, BLEU and METEOR (Banerjee & Lavie, 2005) incorrectly give a higher score to people like visiting places abroad compared to consumers prefer imported cars. This leads to performance underestimation when semantically-correct phrases are penalized because they differ from the surface form of the reference. In contrast to string matching (e.g., in BLEU) or matching heuristics (e.g., in METEOR), we compute similarity using contextualized token embeddings, which have been shown to be effective for paraphrase detection (Devlin et al., 2019). Second, n-gram models fail to capture distant dependencies and penalize semantically-critical ordering changes (Isozaki et al., 2010). For example, given a small window of size two, BLEU will only mildly penalize swapping of cause and effect clauses (e.g. A because B instead of B because A), especially when the arguments A and B are long phrases. In contrast, contextualized embeddings are trained to effectively capture distant dependencies and ordering.
We experiment with BERTSCORE on machine translation and image captioning tasks using the outputs of 363 systems by correlating BERTSCORE and related metrics to available human judgments. Our experiments demonstrate that BERTSCORE correlates highly with human evaluations.
In machine translation, BERTSCORE shows stronger system-level and segment-level correlations with human judgments than existing metrics on multiple common benchmarks and demonstrates
∗Equal contribution. † Work done at Cornell.
1 arXiv:1904.09675v3 [cs.CL] 24 Feb 2020
Published as a conference paper at ICLR 2020 strong model selection performance compared to BLEU.
We also show that BERTSCORE is well-correlated with human annotators for image captioning, surpassing SPICE, a popular taskspecific metric (Anderson et al., 2016).
Finally, we test the robustness of BERTSCORE on the adversarial paraphrase dataset PAWS (Zhang et al., 2019), and show that it is more robust to adversarial examples than other metrics.
The code for BERTSCORE is available at https://github.com/Tiiiger/bert_score.
PROBLEM STATEMENT AND PRIOR METRICS
Natural language text generation is commonly evaluated using annotated reference sentences. Given a reference sentence x tokenized to k tokens ⟨x1,..., xk⟩ and a candidate ˆx tokenized to l tokens
⟨ˆx1,..., ˆxl⟩, a generation evaluation metric is a function f(x, ˆx) ∈ R. Better metrics have a higher correlation with human judgments. Existing metrics can be broadly categorized into using n-gram matching, edit distance, embedding matching, or learned functions.
2.1 n-GRAM MATCHING APPROACHES
The most commonly used metrics for generation count the number of n-grams that occur in the reference x and candidate ˆx. The higher the n is, the more the metric is able to capture word order, but it also becomes more restrictive and constrained to the exact form of the reference.
Formally, let Sn x and Sn
ˆx be the lists of token n-grams (n ∈ Z+) in the reference x and candidate
ˆx sentences. The number of matched n-grams is � w∈Sn
ˆx I[w ∈ Sn x], where I[·] is an indicator function. The exact match precision (Exact-Pn) and recall (Exact-Rn) scores are:
Exact-Pn =
� w∈Sn
ˆx I[w ∈ Sn x]
|Sn
ˆx| and Exact-Rn =
� w∈Sn x I[w ∈ Sn
ˆx]
|Snx|
Several popular metrics build upon one or both of these exact matching scores.
BLEU
The most widely used metric in machine translation is BLEU (Papineni et al., 2002), which includes three modifications to Exact-Pn. First, each n-gram in the reference can be matched at most once. Second, the number of exact matches is accumulated for all reference-candidate pairs in the corpus and divided by the total number of n-grams in all candidate sentences. Finally, very short candidates are discouraged using a brevity penalty. Typically, BLEU is computed for multiple values of n (e.g. n = 1, 2, 3, 4) and the scores are averaged geometrically. A smoothed variant, SENTBLEU (Koehn et al., 2007) is computed at the sentence level. In contrast to BLEU, BERTSCORE is not restricted to maximum n-gram length, but instead relies on contextualized embeddings that are able to capture dependencies of potentially unbounded length.
METEOR
METEOR (Banerjee & Lavie, 2005) computes Exact-P1 and Exact-R1 while allowing backing-off from exact unigram matching to matching word stems, synonyms, and paraphrases. For example, running may match run if no exact match is possible. Non-exact matching uses an external stemmer, a synonym lexicon, and a paraphrase table. METEOR 1.5 (Denkowski & Lavie, 2014) weighs content and function words differently, and also applies importance weighting to different matching types. The more recent METEOR++ 2.0 (Guo & Hu, 2019) further incorporates a learned external paraphrase resource. Because METEOR requires external resources, only five languages are supported with the full feature set, and eleven are partially supported. Similar to METEOR, BERTSCORE allows relaxed matches, but relies on BERT embeddings that are trained on large amounts of raw text and are currently available for 104 languages. BERTSCORE also supports importance weighting, which we estimate with simple corpus statistics.
Other Related Metrics
NIST (Doddington, 2002) is a revised version of BLEU that weighs each n-gram differently and uses an alternative brevity penalty. ∆BLEU (Galley et al., 2015) modifies multi-reference BLEU by including human annotated negative reference sentences. CHRF (Popovi´c, 2015) compares character n-grams in the reference and candidate sentences. CHRF++ (Popovi´c, 2017) extends CHRF to include word bigram matching. ROUGE (Lin, 2004) is a commonly used metric for summarization evaluation. ROUGE-n (Lin, 2004) computes Exact-Rn (usually n = 1, 2), while ROUGE-L is a variant of Exact-R1 with the numerator replaced by the length of the longest common subsequence. CIDER (Vedantam et al., 2015) is an image captioning metric that computes
Published as a conference paper at ICLR 2020 cosine similarity between tf–idf weighted n-grams. We adopt a similar approach to weigh tokens differently. Finally, Chaganty et al. (2018) and Hashimoto et al. (2019) combine automatic metrics with human judgments for text generation evaluation.
EDIT-DISTANCE-BASED METRICS
Several methods use word edit distance or word error rate (Levenshtein, 1966), which quantify similarity using the number of edit operations required to get from the candidate to the reference. TER (Snover et al., 2006) normalizes edit distance by the number of reference words, and ITER (Panja & Naskar, 2018) adds stem matching and better normalization. PER (Tillmann et al., 1997) computes position independent error rate, CDER (Leusch et al., 2006) models block reordering as an edit operation. CHARACTER (Wang et al., 2016) and EED (Stanchev et al., 2019) operate on the character level and achieve higher correlation with human judgements on some languages.
EMBEDDING-BASED METRICS
Word embeddings (Mikolov et al., 2013; Pennington et al., 2014; Grave et al., 2018; Nguyen et al., 2017; Athiwaratkun et al., 2018) are learned dense token representations. MEANT 2.0 (Lo, 2017) uses word embeddings and shallow semantic parses to compute lexical and structural similarity.
YISI-1 (Lo et al., 2018) is similar to MEANT 2.0, but makes the use of semantic parses optional.
Both methods use a relatively simple similarity computation, which inspires our approach, including using greedy matching (Corley & Mihalcea, 2005) and experimenting with a similar importance weighting to YISI-1. However, we use contextual embeddings, which capture the specific use of a token in a sentence, and potentially capture sequence information. We do not use external tools to generate linguistic structures, which makes our approach relatively simple and portable to new languages. Instead of greedy matching, WMD (Kusner et al., 2015), WMDO (Chow et al., 2019), and SMS (Clark et al., 2019) propose to use optimal matching based on earth mover's distance (Rubner et al., 1998). The tradeoff1 between greedy and optimal matching was studied by Rus & Lintean(2012). Sharma et al. (2018) compute similarity with sentence-level representations. In contrast, our token-level computation allows us to weigh tokens differently according to their importance.
LEARNED METRICS
Various metrics are trained to optimize correlation with human judgments. BEER (Stanojevi´c &
Sima'an, 2014) uses a regression model based on character n-grams and word bigrams. BLEND (Ma et al., 2017) uses regression to combine 29 existing metrics. RUSE (Shimanaka et al., 2018) combines three pre-trained sentence embedding models. All these methods require costly human judgments as supervision for each dataset, and risk poor generalization to new domains, even within a known language and task (Chaganty et al., 2018). Cui et al. (2018) and Lowe et al. (2017) train a neural model to predict if the input text is human-generated. This approach also has the risk of being optimized to existing data and generalizing poorly to new data. In contrast, the model underlying
BERTSCORE is not optimized for any specific evaluation task.
BERTSCORE
Given a reference sentence x = ⟨x1,..., xk⟩ and a candidate sentence ˆx = ⟨ˆx1,..., ˆxl⟩, we use contextual embeddings to represent the tokens, and compute matching using cosine similarity, optionally weighted with inverse document frequency scores. Figure 1 illustrates the computation.
Token Representation
We use contextual embeddings to represent the tokens in the input sentences x and ˆx. In contrast to prior word embeddings (Mikolov et al., 2013; Pennington et al., 2014), contextual embeddings, such as BERT (Devlin et al., 2019) and ELMO (Peters et al., 2018), can generate different vector representations for the same word in different sentences depending on the surrounding words, which form the context of the target word. The models used to generate these embeddings are most commonly trained using various language modeling objectives, such as masked word prediction (Devlin et al., 2019).
1We provide an ablation study of this design choice in Appendix C.
Published as a conference paper at ICLR 2020
Reference the weather is cold today
Candidate it is freezing today
Candidate
Contextual
Embedding
Pairwise Cosine
Similarity
RBERT = (0.713⇥1.27)+(0.515⇥7.94)+...
8.88 idf weights
Importance Weighting(Optional)
Maximum Similarity x
ˆx
Reference
Figure 1: Illustration of the computation of the recall metric RBERT. Given the reference x and candidate ˆx, we compute BERT embeddings and pairwise cosine similarity. We highlight the greedy matching in red, and include the optional idf importance weighting.
We experiment with different models (Section 4), using the tokenizer provided with each model.
Given a tokenized reference sentence x = ⟨x1,..., xk⟩, the embedding model generates a sequence of vectors ⟨x1,..., xk⟩. Similarly, the tokenized candidate ˆx = ⟨ˆx1,..., ˆxm⟩ is mapped to ⟨ˆx1,..., ˆxl⟩. The main model we use is BERT, which tokenizes the input text into a sequence of word pieces (Wu et al., 2016), where unknown words are split into several commonly observed sequences of characters. The representation for each word piece is computed with a Transformer encoder (Vaswani et al., 2017) by repeatedly applying self-attention and nonlinear transformations in an alternating fashion. BERT embeddings have been shown to benefit various NLP tasks (Devlin et al., 2019; Liu, 2019; Huang et al., 2019; Yang et al., 2019a).
Similarity Measure
The vector representation allows for a soft measure of similarity instead of exact-string (Papineni et al., 2002) or heuristic (Banerjee & Lavie, 2005) matching. The cosine similarity of a reference token xi and a candidate token ˆxj is x⊤ i ˆxj
∥xi∥∥ˆxj∥. We use pre-normalized vectors, which reduces this calculation to the inner product x⊤ i ˆxj. While this measure considers tokens in isolation, the contextual embeddings contain information from the rest of the sentence.
BERTSCORE
The complete score matches each token in x to a token in ˆx to compute recall, and each token in ˆx to a token in x to compute precision. We use greedy matching to maximize the matching similarity score,2 where each token is matched to the most similar token in the other sentence. We combine precision and recall to compute an F1 measure. For a reference x and candidate ˆx, the recall, precision, and F1 scores are:
RBERT = 1
|x|
� xi∈x max
ˆxj∈ˆx x⊤ i ˆxj, PBERT = 1
|ˆx|
�
ˆxj∈ˆx max xi∈x x⊤ i ˆxj, FBERT = 2 PBERT · RBERT
PBERT + RBERT
Importance Weighting
Previous work on similarity measures demonstrated that rare words can be more indicative for sentence similarity than common words (Banerjee & Lavie, 2005; Vedantam et al., 2015). BERTSCORE enables us to easily incorporate importance weighting. We experiment with inverse document frequency (idf) scores computed from the test corpus. Given M reference sentences {x(i)}M i=1, the idf score of a word-piece token w is idf(w) = − log 1
M
M
� i=1
I[w ∈ x(i)], where I[·] is an indicator function. We do not use the full tf-idf measure because we process single sentences, where the term frequency (tf) is likely 1. For example, recall with idf weighting is RBERT =
� xi∈x idf(xi) maxˆxj∈ˆx x⊤ i ˆxj
� xi∈x idf(xi)
Because we use reference sentences to compute idf, the idf scores remain the same for all systems evaluated on a specific test set. We apply plus-one smoothing to handle unknown word pieces.
2We compare greedy matching with optimal assignment in Appendix C.
Published as a conference paper at ICLR 2020
Baseline Rescaling
Because we use pre-normalized vectors, our computed scores have the same numerical range of cosine similarity (between −1 and 1). However, in practice we observe scores in a more limited range, potentially because of the learned geometry of contextual embeddings.
While this characteristic does not impact BERTSCORE's capability to rank text generation systems, it makes the actual score less readable. We address this by rescaling BERTSCORE with respect to its empirical lower bound b as a baseline. We compute b using Common Crawl monolingual datasets.3 For each language and contextual embedding model, we create 1M candidate-reference pairs by grouping two random sentences. Because of the random pairing and the corpus diversity, each pair has very low lexical and semantic overlapping.4 We compute b by averaging BERTSCORE computed on these sentence pairs. Equipped with baseline b, we rescale BERTSCORE linearly. For example, the rescaled value ˆRBERT of RBERT is:
ˆRBERT = RBERT − b
1 − b
After this operation ˆRBERT is typically between 0 and 1. We apply the same rescaling procedure for PBERT and FBERT. This method does not affect the ranking ability and human correlation of BERTSCORE, and is intended solely to increase the score readability.
EXPERIMENTAL SETUP
We evaluate our approach on machine translation and image captioning.
Contextual Embedding Models
We evaluate twelve pre-trained contextual embedding models, including variants of BERT (Devlin et al., 2019), RoBERTa (Liu et al., 2019b), XLNet (Yang et al., 2019b), and XLM (Lample & Conneau, 2019). We present the best-performing models in Section 5.
We use the 24-layer RoBERTalarge model5 for English tasks, 12-layer BERTchinese model for Chinese tasks, and the 12-layer cased multilingual BERTmulti model for other languages.6 We show the performance of all other models in Appendix F. Contextual embedding models generate embedding representations at every layer in the encoder network. Past work has shown that intermediate layers produce more effective representations for semantic tasks (Liu et al., 2019a). We use the WMT16 dataset (Bojar et al., 2016) as a validation set to select the best layer of each model (Appendix B).
Machine Translation
Our main evaluation corpus is the WMT18 metric evaluation dataset (Ma et al., 2018), which contains predictions of 149 translation systems across 14 language pairs, gold references, and two types of human judgment scores. Segment-level human judgments assign a score to each reference-candidate pair. System-level human judgments associate each system with a single score based on all pairs in the test set. WMT18 includes translations from English to Czech, German, Estonian, Finnish, Russian, and Turkish, and from the same set of languages to English. We follow the WMT18 standard practice and use absolute Pearson correlation |ρ| and Kendall rank correlation τ to evaluate metric quality, and compute significance with the Williams test (Williams, 1959) for |ρ| and bootstrap re-sampling for τ as suggested by Graham & Baldwin (2014). We compute systemlevel scores by averaging BERTSCORE for every reference-candidate pair. We also experiment with hybrid systems by randomly sampling one candidate sentence from one of the available systems for each reference sentence (Graham & Liu, 2016). This enables system-level experiments with a higher number of systems. Human judgments of each hybrid system are created by averaging the WMT18 segment-level human judgments for the corresponding sentences in the sampled data. We compare
BERTSCOREs to one canonical metric for each category introduced in Section 2, and include the comparison with all other participating metrics from WMT18 in Appendix F.
In addition to the standard evaluation, we design model selection experiments. We use 10K hybrid systems super-sampled from WMT18. We randomly select 100 out of 10K hybrid systems, and rank them using the automatic metrics. We repeat this process 100K times. We report the percentage of the metric ranking agreeing with the human ranking on the best system (Hits@1). In Tables 23-28, 3https://commoncrawl.org/
4BLEU computed on these pairs is around zero.
5We use the tokenizer provided with each model. For all Hugging Face models that use the GPT-2 tokenizer, at the time of our experiments, the tokenizer adds a space to the beginning of each sentence.
6All the models used are from https://github.com/huggingface/pytorch-transformers.
Published as a conference paper at ICLR 2020
Metric en↔cs en↔de en↔et en↔fi en↔ru en↔tr en↔zh
BLEU
ITER.980/ –
RUSE.981/ –.997/ –.990/ –.991/ –.988/ –.853/ –.981/ –
YiSi-1
PBERT
RBERT
FBERT
FBERT (idf)
Table 1: Absolute Pearson correlations with system-level human judgments on WMT18. For each language pair, the left number is the to-English correlation, and the right is the from-English. We bold correlations of metrics not significantly outperformed by any other metric under Williams Test for that language pair and direction. The numbers in parenthesis are the number of systems used for each language pair and direction.
Metric en↔cs en↔de en↔et en↔fi en↔ru en↔tr en↔zh
BLEU
ITER.978/ –
RUSE.974/ –.996/ –.988/ –.983/ –.982/ –.780/ –.973/ –
YiSi-1
PBERT
RBERT
FBERT
FBERT (idf)
Table 2: Absolute Pearson correlations with system-level human judgments on WMT18. We use
10K hybrid super-sampled systems for each language pair and direction. For each language pair, the left number is the to-English correlation, and the right is the from-English. Bolding criteria is the same as in Table 1. we include two additional measures to the model selection study: (a) the mean reciprocal rank of the top metric-rated system according to the human ranking, and (b) the difference between the human score of the top human-rated system and that of the top metric-rated system.
Additionally, we report the same study on the WMT17 (Bojar et al., 2017) and the WMT16 (Bojar et al., 2016) datasests in Appendix F.7 This adds 202 systems to our evaluation.
Image Captioning
We use the human judgments of twelve submission entries from the COCO
2015 Captioning Challenge. Each participating system generates a caption for each image in the COCO validation set (Lin et al., 2014), and each image has approximately five reference captions.
Following Cui et al. (2018), we compute the Pearson correlation with two system-level metrics: the percentage of captions that are evaluated as better or equal to human captions (M1) and the percentage of captions that are indistinguishable from human captions (M2). We compute
BERTSCORE with multiple references by scoring the candidate with each available reference and returning the highest score. We compare with eight task-agnostic metrics: BLEU (Papineni et al., 2002), METEOR (Banerjee & Lavie, 2005), ROUGE-L (Lin, 2004), CIDER (Vedantam et al., 2015), BEER (Stanojevi´c & Sima'an, 2014), EED (Stanchev et al., 2019), CHRF++ (Popovi´c, 2017), and CHARACTER (Wang et al., 2016). We also compare with two task-specific metrics: SPICE (Anderson et al., 2016) and LEIC (Cui et al., 2018). SPICE is computed using the similarity of scene graphs parsed from the reference and candidate captions. LEIC is trained to predict if a caption is written by a human given the image.
7For WMT16, we only conduct segment-level experiments on to-English pairs due to errors in the dataset.
Published as a conference paper at ICLR 2020
Metric en↔cs en↔de en↔et en↔fi en↔ru en↔tr en↔zh
BLEU
ITER.673/ –
RUSE.214/ –.823/ –.785/ –.487/ –.248/ –.109/ –.670/ –
YiSi-1
PBERT
RBERT
FBERT
FBERT (idf)
Table 3: Model selection accuracies (Hits@1) on WMT18 hybrid systems. We report the average of 100K samples and the 0.95 confidence intervals are below 10−3. We bold the highest numbers for each language pair and direction.
Metric en↔cs en↔de en↔et en↔fi en↔ru en↔tr en↔zh(5k/5k)(78k/ 20k)(57k/32k)(16k/10k)(10k/22k)(9k/1k)(33k/29k)
BLEU
ITER
-.029/.236.144/ –
RUSE.347/ –.498/ –.368/ –.273/ –.311/ –.259/ –.218/ –
YiSi-1
PBERT
RBERT
FBERT
FBERT (idf)
Table 4: Kendall correlations with segment-level human judgments on WMT18. For each language pair, the left number is the to-English correlation, and the right is the from-English. We bold correlations of metrics not significantly outperformed by any other metric under bootstrap sampling for that language pair and direction. The numbers in parenthesis are the number of candidate-reference sentence pairs for each language pair and direction.
RESULTS
Machine Translation
Tables 1–3 show system-level correlation to human judgements, correlations on hybrid systems, and model selection performance. We observe that BERTSCORE is consistently a top performer. In to-English results, RUSE (Shimanaka et al., 2018) shows competitive performance. However, RUSE is a supervised method trained on WMT16 and WMT15 human judgment data. In cases where RUSE models were not made available, such as for our from-English experiments, it is not possible to use RUSE without additional data and training. Table 4 shows segment-level correlations. We see that BERTSCORE exhibits significantly higher performance compared to the other metrics. The large improvement over BLEU stands out, making BERTSCORE particularly suitable to analyze specific examples, where SENTBLEU is less reliable. In Appendix A, we provide qualitative examples to illustrate the segment-level performance difference between SENTBLEU and BERTSCORE. At the segment-level, BERTSCORE even significantly outperforms
RUSE. Overall, we find that applying importance weighting using idf at times provides small benefit, but in other cases does not help. Understanding better when such importance weighting is likely to help is an important direction for future work, and likely depends on the domain of the text and the available test data. We continue without idf weighting for the rest of our experiments. While recall RBERT, precision PBERT, and F1 FBERT alternate as the best measure in different setting, F1
FBERT performs reliably well across all the different settings. Our overall recommendation is therefore to use F1. We present additional results using the full set of 351 systems and evaluation metrics in Tables 12–28 in the appendix, including for experiments with idf importance weighting, different contextual embedding models, and model selection.
Image Captioning
Table 5 shows correlation results for the COCO Captioning Challenge.
BERTSCORE outperforms all task-agnostic baselines by large margins. Image captioning presents a challenging evaluation scenario, and metrics based on strict n-gram matching, including BLEU and ROUGE, show weak correlations with human judgments. idf importance weighting shows signifiPublished as a conference paper at ICLR 2020
Metric
M1
M2
BLEU
-0.019∗
-0.005∗
METEOR
0.606∗
0.594∗
ROUGE-L
0.090∗
0.096∗
CIDER
0.438∗
0.440∗
SPICE
0.759∗
0.750∗
LEIC
0.939∗
0.949∗
BEER
EED
CHRF++
CHARACTER
PBERT
-0.105
-0.041
RBERT
FBERT
RBERT (idf)
Table 5:
Pearson correlation on the 2015 COCO Captioning Challenge.
The M1 and M2 measures are described in Section 4. LEIC uses images as additional inputs. Numbers with ∗ are cited from Cui et al. (2018).
We bold the highest correlations of task-specific and task-agnostic metrics.
Type
Method
QQP
PAWSQQP
Trained on QQP(supervised)
DecAtt
0.939∗
DIIN
0.952∗
BERT
0.963∗
Trained on QQP
+ PAWSQQP(supervised)
DecAttDIINBERTMetric(Not trained on QQP or PAWSQQP)
BLEU
METEOR
ROUGE-L
CHRF++
BEER
EED
CHARACTER
PBERT
RBERT
FBERT
FBERT (idf)
Table 6:
Area under ROC curve (AUC) on QQP and PAWSQQP datasets.
The scores of trained DecATT (Parikh et al., 2016), DIIN (Gong et al., 2018), and fine-tuned BERT are reported by Zhang et al.(2019). Numbers with ∗ are scores on the held-out test set of QQP. We bold the highest correlations of taskspecific and task-agnostic metrics. cant benefit for this task, suggesting people attribute higher importance to content words. Finally, LEIC (Cui et al., 2018), a trained metric that takes images as additional inputs and is optimized specifically for the COCO data and this set of systems, outperforms all other methods.
Speed
Despite the use of a large pre-trained model, computing BERTSCORE is relatively fast. We are able to process 192.5 candidate-reference pairs/second using a GTX-1080Ti GPU. The complete
WMT18 en-de test set, which includes 2,998 sentences, takes 15.6sec to process, compared to 5.4sec with SacreBLEU (Post, 2018), a common BLEU implementation. Given the sizes of commonly used test and validation sets, the increase in processing time is relatively marginal, and BERTSCORE is a good fit for using during validation (e.g., for stopping) and testing, especially when compared to the time costs of other development stages.
ROBUSTNESS ANALYSIS
We test the robustness of BERTSCORE using adversarial paraphrase classification. We use the Quora Question Pair corpus (QQP; Iyer et al., 2017) and the adversarial paraphrases from the Paraphrase Adversaries from Word Scrambling dataset (PAWS; Zhang et al., 2019). Both datasets contain pairs of sentences labeled to indicate whether they are paraphrases or not. Positive examples in QQP are real duplicate questions, while negative examples are related, but different questions.
Sentence pairs in PAWS are generated through word swapping. For example, in PAWS, Flights from
New York to Florida may be changed to Flights from Florida to New York and a good classifier should identify that these two sentences are not paraphrases. PAWS includes two parts: PAWSQQP, which is based on the QQP data, and PAWSWiki. We use the PAWSQQP development set which contains 667 sentences. For the automatic metrics, we use no paraphrase detection training data.
We expect that pairs with higher scores are more likely to be paraphrases. To evaluate the automatic metrics on QQA, we use the first 5,000 sentences in the training set instead of the the test set because the test labels are not available. We treat the first sentence as the reference and the second sentence as the candidate.
Table 6 reports the area under ROC curve (AUC) for existing models and automatic metrics. We observe that supervised classifiers trained on QQP perform worse than random guess on PAWSQQP, which shows these models predict the adversarial examples are more likely to be paraphrases. When
Published as a conference paper at ICLR 2020 adversarial examples are provided in training, state-of-the-art models like DIIN (Gong et al., 2018) and fine-tuned BERT are able to identify the adversarial examples but their performance still decreases significantly from their performance on QQP. Most metrics have decent performance on
QQP, but show a significant performance drop on PAWSQQP, almost down to chance performance.
This suggests these metrics fail to to distinguish the harder adversarial examples. In contrast, the performance of BERTSCORE drops only slightly, showing more robustness than the other metrics.
DISCUSSION
We propose BERTSCORE, a new metric for evaluating generated text against gold standard references. BERTSCORE is purposely designed to be simple, task agnostic, and easy to use. Our analysis illustrates how BERTSCORE resolves some of the limitations of commonly used metrics, especially on challenging adversarial examples. We conduct extensive experiments with various configuration choices for BERTSCORE, including the contextual embedding model used and the use of importance weighting. Overall, our extensive experiments, including the ones in the appendix, show that
BERTSCORE achieves better correlation than common metrics, and is effective for model selection. However, there is no one configuration of BERTSCORE that clearly outperforms all others.
While the differences between the top configurations are often small, it is important for the user to be aware of the different trade-offs, and consider the domain and languages when selecting the exact configuration to use. In general, for machine translation evaluation, we suggest using FBERT, which we find the most reliable. For evaluating text generation in English, we recommend using the 24layer RoBERTalarge model to compute BERTSCORE. For non-English language, the multilingual
BERTmulti is a suitable choice although BERTSCORE computed with this model has less stable performance on low-resource languages. We report the optimal hyperparameter for all models we experimented with in Appendix B
Briefly following our initial preprint publication, Zhao et al. (2019) published a concurrently developed method related to ours, but with a focus on integrating contextual word embeddings with earth mover's distance (EMD; Rubner et al., 1998) rather than our simple matching process. They also propose various improvements compared to our use of contextualized embeddings. We study these improvements in Appendix C and show that integrating them into BERTSCORE makes it equivalent or better than the EMD-based approach. Largely though, the effect of the different improvements on BERTSCORE is more modest compared to their method. Shortly after our initial publication, YiSi-1 was updated to use BERT embeddings, showing improved performance (Lo, 2019). This further corroborates our findings. Other recent related work includes training a model on top of BERT to maximize the correlation with human judgments (Mathur et al., 2019) and evaluating generation with a BERT model fine-tuned on paraphrasing (Yoshimura et al., 2019). More recent work shows the potential of using BERTSCORE for training a summarization system (Li et al., 2019) and for domain-specific evaluation using SciBERT (Beltagy et al., 2019) to evaluate abstractive text summarization (Gabriel et al., 2019).
In future work, we look forward to designing new task-specific metrics that use BERTSCORE as a subroutine and accommodate task-specific needs, similar to how Wieting et al. (2019) suggests to use semantic similarity for machine translation training. Because BERTSCORE is fully differentiable, it also can be incorporated into a training procedure to compute a learning loss that reduces the mismatch between optimization and evaluation objectives.
ACKNOWLEDGEMENT
This research is supported in part by grants from the National Science Foundation (III-1618134, III1526012, IIS1149882, IIS-1724282, TRIPODS-1740822, CAREER-1750499), the Office of Naval
Research DOD (N00014-17-1-2175), and the Bill and Melinda Gates Foundation, SAP, Zillow, Workday, and Facebook Research. We thank Graham Neubig and David Grangier for for their insightful comments. We thank the Cornell NLP community including but not limited to Claire
Cardie, Tianze Shi, Alexandra Schofield, Gregory Yauney, and Rishi Bommasani. We thank Yin
Cui and Guandao Yang for their help with the COCO 2015 dataset.
Published as a conference paper at ICLR 2020
REFERENCES
Peter Anderson, Basura Fernando, Mark Johnson, and Stephen Gould. SPICE: Semantic propositional image caption evaluation. In ECCV, 2016.
Ben Athiwaratkun, Andrew Wilson, and Anima Anandkumar. Probabilistic fasttext for multi-sense word embeddings. In ACL, 2018.
Satanjeev Banerjee and Alon Lavie. METEOR: An automatic metric for mt evaluation with improved correlation with human judgments. In IEEvaluation@ACL, 2005.
Iz Beltagy, Kyle Lo, and Arman Cohan. SciBERT: A pretrained language model for scientific text.
ArXiv, 2019.
Ondˇrej Bojar, Yvette Graham, Amir Kamran, and Miloš Stanojevi´c. Results of the WMT16 metrics shared task. In WMT, 2016.
Ondˇrej Bojar, Yvette Graham, and Amir Kamran. Results of the WMT17 metrics shared task. In
WMT, 2017.
Arun Chaganty, Stephen Mussmann, and Percy Liang. The price of debiasing automatic metrics in natural language evalaution. In ACL, 2018.
Julian Chow, Lucia Specia, and Pranava Madhyastha. WMDO: Fluency-based word mover's distance for machine translation evaluation. In WMT, 2019.
Elizabeth Clark, Asli Celikyilmaz, and Noah A. Smith. Sentence mover's similarity: Automatic evaluation for multi-sentence texts. In ACL, 2019.
Courtney Corley and Rada Mihalcea. Measuring the semantic similarity of texts. In ACL Workshop, EMSEE '05, 2005.
Yin Cui, Guandao Yang, Andreas Veit, Xun Huang, and Serge J. Belongie. Learning to evaluate image captioning. In CVPR, 2018.
Michael Denkowski and Alon Lavie. Meteor universal: Language specific translation evaluation for any target language. In WMT@ACL, 2014.
Jacob Devlin, Ming-Wei Chang, Kenton Lee, and Kristina Toutanova. BERT: Pre-training of deep bidirectional transformers for language understanding. In NAACL-HLT, 2019.
George Doddington.
Automatic evaluation of machine translation quality using n-gram cooccurrence statistics. In HLT, 2002.
William B Dolan and Chris Brockett. Automatically constructing a corpus of sentential paraphrases.
In IWP, 2005.
Saadia Gabriel, Antoine Bosselut, Ari Holtzman, Kyle Lo, Asli Çelikyilmaz, and Yejin Choi. Cooperative generator-discriminator networks for abstractive summarization with narrative flow.
ArXiv, 2019.
Michel Galley, Chris Brockett, Alessandro Sordoni, Yangfeng Ji, Michael Auli, Chris Quirk, Margaret Mitchell, Jianfeng Gao, and William B. Dolan. deltaBLEU: A discriminative metric for generation tasks with intrinsically diverse targets. In ACL, 2015.
Jonas Gehring, Michael Auli, David Grangier, Denis Yarats, and Yann N Dauphin. Convolutional sequence to sequence learning. In ICML, 2017.
Yichen Gong, Heng Luo, and Jian Zhang. Natural language inference over interaction space. In
ICLR, 2018.
Yvette Graham and Timothy Baldwin. Testing for significance of increased correlation with human judgment. In EMNLP, 2014.
Published as a conference paper at ICLR 2020
Yvette Graham and Qun Liu. Achieving accurate conclusions in evaluation of automatic machine translation metrics. In NAACL, 2016.
Edouard Grave, Piotr Bojanowski, Prakhar Gupta, Armand Joulin, and Tomas Mikolov. Learning word vectors for 157 languages. arXiv preprint arXiv:1802.06893, 2018.
Yinuo Guo and Junfeng Hu. Meteor++ 2.0: Adopt syntactic level paraphrase knowledge into machine translation evaluation. In WMT, 2019.
Tatsu Hashimoto, Hugh Zhang, and Percy Liang. Unifying human and statistical evaluation for natural language generation. In NAACL-HLT, 2019.
Chenyang Huang, Amine Trabelsi, and Osmar R Zaïane. ANA at semeval-2019 task 3: Contextual emotion detection in conversations through hierarchical LSTMs and BERT. arXiv preprint arXiv:1904.00132, 2019.
Hideki Isozaki, Tsutomu Hirao, Kevin Duh, Katsuhito Sudoh, and Hajime Tsukada. Automatic evaluation of translation quality for distant language pairs. In EMNLP, 2010.
Shankar Iyer, Nikhil Dandekar, and Kornel Csernai. First quora dataset release: Question pairs. https://tinyurl.com/y2y8u5ed, 2017.
Philipp Koehn, Hieu Hoang, Alexandra Birch, Chris Callison-Burch, Marcello Federico, Nicola
Bertoldi, Brooke Cowan, Wade Shen, Christine Moran, Richard Zens, Chris Dyer, Ondrej Bojar, Alexandra Constantin, and Evan Herbst.
Moses: Open source toolkit for statistical machine translation. In ACL, 2007.
Matt Kusner, Yu Sun, Nicholas Kolkin, and Kilian Weinberger. From word embeddings to document distances. In ICML, 2015.
Guillaume Lample and Alexis Conneau. Cross-lingual language model pretraining. arXiv, 2019.
Gregor Leusch, Nicola Ueffing, and Hermann Ney. CDER: Efficient MT evaluation using block movements. In EACL, 2006.
Vladimir Iosifovich Levenshtein. Binary Codes Capable of Correcting Deletions, Insertions and Rever sals. Soviet Physics Doklady, 10, 1966.
Siyao Li, Deren Lei, Pengda Qin, and William Yang Wang. Deep reinforcement learning with distributional semantic rewards for abstractive summarization. In EMNLP-IJCNLP, 2019.
Chin-Yew Lin. ROUGE: A package for automatic evaluation of summaries. In ACL, 2004.
Tsung-Yi Lin, Michael Maire, Serge J. Belongie, Lubomir D. Bourdev, Ross B. Girshick, James
Hays, Pietro Perona, Deva Ramanan, Piotr Dollár, and C. Lawrence Zitnick. Microsoft COCO:
Common objects in context. In ECCV, 2014.
Nelson F. Liu, Matt Gardner, Yonatan Belinkov, Matthew E. Peters, and Noah A. Smith. Linguistic knowledge and transferability of contextual representations. arXiv preprint arXiv:1903.08855, 2019a.
Yang Liu. Fine-tune BERT for extractive summarization. arXiv preprint arXiv:1903.10318, 2019.
Yinhan Liu, Myle Ott, Naman Goyal, Jingfei Du, Mandar Joshi, Danqi Chen, Omer Levy, Mike
Lewis, Luke Zettlemoyer, and Veselin Stoyanov. Roberta: A robustly optimized BERT pretraining approach. arXiv, abs/1907.11692, 2019b.
Chi-kiu Lo. MEANT 2.0: Accurate semantic mt evaluation for any output language. In WMT, 2017.
Chi-kiu Lo. YiSi - a unified semantic MT quality evaluation and estimation metric for languages with different levels of available resources. In WMT, 2019.
Published as a conference paper at ICLR 2020
Chi-kiu Lo, Michel Simard, Darlene Stewart, Samuel Larkin, Cyril Goutte, and Patrick Littell. Accurate semantic textual similarity for cleaning noisy parallel corpora using semantic machine translation evaluation metric: The NRC supervised submissions to the parallel corpus filtering task. In WMT, 2018.
Ryan Lowe, Michael Noseworthy, Iulian Vlad Serban, Nicolas Angelard-Gontier, Yoshua Bengio, and Joelle Pineau. Towards an automatic Turing test: Learning to evaluate dialogue responses.
In ACL, 2017.
Qingsong Ma, Yvette Graham, Shugen Wang, and Qun Liu. Blend: a novel combined mt metric based on direct assessment – casict-dcu submission to WMT17 metrics task. In WMT, 2017.
Qingsong Ma, Ondrej Bojar, and Yvette Graham. Results of the WMT18 metrics shared task: Both characters and embeddings achieve good performance. In WMT, 2018.
Nitika Mathur, Timothy Baldwin, and Trevor Cohn. Putting evaluation in context: Contextual embeddings improve machine translation evaluation. In ACL, 2019.
Tomas Mikolov, Ilya Sutskever, Kai Chen, Gregory S. Corrado, and Jeffrey Dean.
Distributed representations of words and phrases and their compositionality. In NIPS, 2013.
Dai Quoc Nguyen, Dat Quoc Nguyen, Ashutosh Modi, Stefan Thater, and Manfred Pinkal.
A mixture model for learning multi-sense word embeddings. In ACL, 2017.
Myle Ott, Sergey Edunov, David Grangier, and Michael Auli. Scaling neural machine translation.
In WMT, 2018.
Myle Ott, Sergey Edunov, Alexei Baevski, Angela Fan, Sam Gross, Nathan Ng, David Grangier, and Michael Auli. fairseq: A fast, extensible toolkit for sequence modeling. arXiv preprint arXiv:1904.01038, 2019.
Joybrata Panja and Sudip Kumar Naskar. Iter: Improving translation edit rate through optimizable edit costs. In WMT, 2018.
Kishore Papineni, Salim Roukos, Todd Ward, and Wei-Jing Zhu. Bleu: a method for automatic evaluation of machine translation. In ACL, 2002.
Ankur Parikh, Oscar Täckström, Dipanjan Das, and Jakob Uszkoreit. A decomposable attention model for natural language inference. In EMNLP, 2016.
Jeffrey Pennington, Richard Socher, and Christopher D. Manning. Glove: Global vectors for word representation. In EMNLP, 2014.
Matthew E. Peters, Mark Neumann, Mohit Iyyer, Matt Gardner, Christopher Clark, Kenton Lee, and Luke S. Zettlemoyer. Deep contextualized word representations. In NAACL-HLT, 2018.
Maja Popovi´c. chrf: character n-gram f-score for automatic mt evaluation. In WMT@ACL, 2015.
Maja Popovi´c. chrf++: words helping character n-grams. In WMT, 2017.
Matt Post. A call for clarity in reporting BLEU scores. In WMT, 2018.
Nils Reimers and Iryna Gurevych. Alternative weighting schemes for elmo embeddings. arXiv preprint arXiv:1904.02954, 2019.
Yossi Rubner, Carlo Tomasi, and Leonidas J Guibas. A metric for distributions with applications to image databases. In ICCV. IEEE, 1998.
Vasile Rus and Mihai Lintean. A comparison of greedy and optimal assessment of natural language student input using word-to-word similarity metrics. In Proceedings of the Seventh Workshop on
Building Educational Applications Using NLP. ACL, 2012.
Published as a conference paper at ICLR 2020
Andreas Rücklé, Steffen Eger, Maxime Peyrard, and Iryna Gurevych. Concatenated power mean word embeddings as universal cross-lingual sentence representations. arXiv, 2018.
Shikhar Sharma, Layla El Asri, Hannes Schulz, and Jeremie Zumer. Relevance of unsupervised metrics in task-oriented dialogue for evaluating natural language generation. arXiv preprint arXiv:1706.09799, 2018.
Hiroki Shimanaka, Tomoyuki Kajiwara, and Mamoru Komachi. Ruse: Regressor using sentence embeddings for automatic machine translation evaluation. In WMT, 2018.
Matthew Snover, Bonnie Dorr, Richard Schwartz, Linnea Micciulla, and John Makhoul. A study of translation edit rate with targeted human annotation. In AMTA, 2006.
Peter Stanchev, Weiyue Wang, and Hermann Ney. EED: Extended edit distance measure for machine translation. In WMT, 2019.
Miloš Stanojevi´c and Khalil Sima'an. Beer: Better evaluation as ranking. In WMT, 2014.
Christoph Tillmann, Stephan Vogel, Hermann Ney, Arkaitz Zubiaga, and Hassan Sawaf. Accelerated dp based search for statistical translation. In EUROSPEECH, 1997.
Kristina Toutanova, Chris Brockett, Ke M Tran, and Saleema Amershi. A dataset and evaluation metrics for abstractive compression of sentences and short paragraphs. In EMNLP, 2016.
Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob Uszkoreit, Llion Jones, Aidan N Gomez, Łukasz Kaiser, and Illia Polosukhin. Attention is all you need. In NIPS, 2017.
Ramakrishna Vedantam, C. Lawrence Zitnick, and Devi Parikh. CIDEr: Consensus-based image description evaluation. In CVPR, 2015.
Weiyue Wang, Jan-Thorsten Peter, Hendrik Rosendahl, and Hermann Ney. Character: Translation edit rate on character level. In WMT, 2016.
John Wieting, Taylor Berg-Kirkpatrick, Kevin Gimpel, and Graham Neubig. Beyond BLEU:training neural machine translation with semantic similarity. In ACL, 2019.
Adina Williams, Nikita Nangia, and Samuel Bowman. A broad-coverage challenge corpus for sentence understanding through inference. In ACL, 2018.
Evan James Williams. Regression analysis. wiley, 1959.
Felix Wu, Angela Fan, Alexei Baevski, Yann Dauphin, and Michael Auli. Pay less attention with lightweight and dynamic convolutions. In ICLR, 2019.
Yonghui Wu, Mike Schuster, Zhifeng Chen, Quoc V. Le, Mohammad Norouzi, Wolfgang Macherey, Maxim Krikun, Yuan Cao, Qin Gao, Jeff Klingner, Apurva Shah, Melvin Johnson, Xiaobing Liu, Lukasz Kaiser, Stephan Gouws, Yoshikiyo Kato, Taku Kudo, Hideto Kazawa, Keith Stevens, George Kurian, Nishant Patil, Wei Wang, Cliff Young, Jason Smith, Jason Riesa, Alex Rudnick, Oriol Vinyals, Gregory S. Corrado, Macduff Hughes, and Jeffrey Dean. Google's neural machine translation system: Bridging the gap between human and machine translation. arXiv preprint arXiv:1609.08144, 2016.
Wei Yang, Haotian Zhang, and Jimmy Lin. Simple applications of BERT for ad hoc document retrieval. arXiv preprint arXiv:1903.10972, 2019a.
Zhilin Yang, Zihang Dai, Yiming Yang, Jaime Carbonell, Ruslan Salakhutdinov, and Quoc V. Le.
XLNet: Generalized autoregressive pretraining for language understanding. arXiv, 2019b.
Ryoma Yoshimura, Hiroki Shimanaka, Yukio Matsumura, Hayahide Yamagishi, and Mamoru Komachi. Filtering pseudo-references by paraphrasing for automatic evaluation of machine translation. In WMT, 2019.
Published as a conference paper at ICLR 2020
Yuan Zhang, Jason Baldridge, and Luheng He. PAWS: Paraphrase adversaries from word scrambling. arXiv preprint arXiv:1904.01130, 2019.
Wei Zhao, Maxime Peyrard, Fei Liu, Yang Gao, Christian M. Meyer, and Steffen Eger. Moverscore:
Text generation evaluating with contextualized embeddings and earth mover distance. In EMNLP, Published as a conference paper at ICLR 2020
Case
No.
Reference and Candidate Pairs
Human
FBERT
BLEU
FBERT > BLEU
1. x: At the same time Kingfisher is closing 60 B&Q outlets across the country
ˆx: At the same time, Kingfisher will close 60 B & Q stores nationwide
2. x: Hewlett-Packard to cut up to 30,000 jobs
ˆx: Hewlett-Packard will reduce jobs up to 30.000
3. x: According to opinion in Hungary, Serbia is "a safe third country".
ˆx: According to Hungarian view, Serbia is a "safe third country."
4. x: Experts believe November's Black Friday could be holding back spending.
ˆx: Experts believe that the Black Friday in November has put the brakes on spending
5. x: And it's from this perspective that I will watch him die.
ˆx: And from this perspective, I will see him die.
BLEU > FBERT
6. x: In their view the human dignity of the man had been violated.
ˆx: Look at the human dignity of the man injured.
8. x: For example when he steered a shot from Ideye over the crossbar in the 56th minute.
ˆx: So, for example, when he steered a shot of Ideye over the latte (56th).
7. x: A good prank is funny, but takes moments to reverse.
ˆx: A good prank is funny, but it takes only moments before he becomes a boomerang.
9. x: I will put the pressure on them and onus on them to make a decision.
ˆx: I will exert the pressure on it and her urge to make a decision.
10. x: Transport for London is not amused by this flyposting "vandalism."
ˆx: Transport for London is the Plaka animal "vandalism" is not funny.
FBERT > Human
11. x: One big obstacle to access to the jobs market is the lack of knowledge of the German language.
ˆx: A major hurdle for access to the labour market are a lack of knowledge of English.
12. x: On Monday night Hungary closed its 175 km long border with Serbia.
ˆx: Hungary had in the night of Tuesday closed its 175 km long border with Serbia.
13. x: They got nothing, but they were allowed to keep the clothes.
ˆx: You got nothing, but could keep the clothes.
14. x: A majority of Republicans don't see Trump's temperament as a problem.
ˆx: A majority of Republicans see Trump's temperament is not a problem.
15. x:His car was still running in the driveway.
ˆx: His car was still in the driveway.
Human > FBERT
16. x: Currently the majority of staff are men.
ˆx: At the moment the men predominate among the staff.
17. x: There are, indeed, multiple variables at play.
ˆx: In fact, several variables play a role.
18. x: One was a man of about 5ft 11in tall.
ˆx: One of the men was about 1,80 metres in size.
19. x: All that stuff sure does take a toll.
ˆx: All of this certainly exacts its toll.
20. x: Wage gains have shown signs of picking up.
ˆx: Increases of wages showed signs of a recovery.
Table 7: Examples sentences where similarity ranks assigned by Human, FBERT, and BLEU differ significantly on WMT16 German-to-English evaluation task. x: gold reference, ˆx: candidate outputs of MT systems. Rankings assigned by Human, FBERT, and BLEU are shown in the right three columns. The sentences are ranked by the similarity, i.e. rank 1 is the most similar pair assigned by a score. An ideal metric should rank similar to humans.
A
QUALITATIVE ANALYSIS
We study BERTSCORE and SENTBLEU using WMT16 German-to-English (Bojar et al., 2016). We rank all 560 candidate-reference pairs by human score, BERTSCORE, or SENTBLEU from most similar to least similar. Ideally, the ranking assigned by BERTSCORE and SENTBLEU should be similar to the ranking assigned by the human score.
Table 7 first shows examples where BERTSCORE and SENTBLEU scores disagree about the ranking for a candidate-reference pair by a large number. We observe that BERTSCORE is effectively able to capture synonyms and changes in word order. For example, the reference and candidate sentences in pair 3 are almost identical except that the candidate replaces opinion in Hungary with Hungarian view and switches the order of the quotation mark (") and a. While BERTSCORE ranks the pair relatively high, SENTBLEU judges the pair as dissimilar, because it cannot match synonyms and is sensitive to the small word order changes. Pair 5 shows a set of changes that preserve the semantic meaning: replacing to cut with will reduce and swapping the order of 30,000 and jobs. BERTSCORE ranks the candidate translation similar to the human judgment, whereas SENTBLEU ranks it much lower. We also see that SENTBLEU potentially over-rewards n-gram overlap, even when phrases are used very differently. In pair 6, both the candidate and the reference contain the human dignity of the man. Yet the two sentences convey very different meaning. BERTSCORE agrees with the human judgment and ranks the pair low. In contrast, SENTBLEU considers the pair as relatively similar because of the significant word overlap.
Published as a conference paper at ICLR 2020
Figure 2: BERTSCORE visualization. The cosine similarity of each word matching in PBERT are color-coded.
The bottom half of Table 7 shows examples where BERTSCORE and human judgments disagree about the ranking. We observe that BERTSCORE finds it difficult to detect factual errors. For example, BERTSCORE assigns high similarity to pair 11 when the translation replaces German language with English and pair 12 where the translation incorrectly outputs Tuesday when it is supposed to generate Monday. BERTSCORE also fails to identify that 5ft 11in is equivalent with
1.80 metres in pair 18. As a result, BERTSCORE assigns low similarity to the eighth pair in Table 7.
SENTBLEU also suffers from these limitations.
Figure 2 visualizes the BERTSCORE matching of two pairs of candidate and reference sentences.
The figure illustrates how FBERT matches synonymous phrases, such as imported cars and foreign cars. We also see that FBERT effectively matches words even given a high ordering distortion, for example the token people in the figure.
Published as a conference paper at ICLR 2020
B
REPRESENTATION CHOICE
As suggested by previous works (Peters et al., 2018; Reimers & Gurevych, 2019), selecting a good layer or a good combination of layers from the BERT model is important. In designing
BERTSCORE, we use WMT16 segment-level human judgment data as a development set to facilitate our representation choice. For Chinese models, we tune with the WMT17 "en-zh" data because the language pair "en-zh" is not available in WMT16. In Figure 3, we plot the change of human correlation of FBERT over different layers of BERT, RoBERTa, XLNet and XLM models.
Based on results from different models, we identify a common trend that FBERT computed with the intermediate representations tends to work better. We tune the number of layer to use for a range of publicly available models.8 Table 8 shows the results of our hyperparameter search.
Model
Total Number of Layers
Best Layer bert-base-uncased
9 bert-large-uncased
18 bert-base-cased-finetuned-mrpc
9 bert-base-multilingual-cased
9 bert-base-chinese
8 roberta-base
10 roberta-large
17 roberta-large-mnli
19 xlnet-base-cased
5 xlnet-large-cased
7 xlm-mlm-en-2048
7 xlm-mlm-100-1280
Table 8: Recommended layer of representation to use for BERTSCORE. The layers are chosen based on a held-out validation set (WMT16).
8https://huggingface.co/pytorch-transformers/pretrained_models.html
Published as a conference paper at ICLR 2020
Figure 3: Pearson correlation of FBERT computed with different models, across different layers, with segment-level human judgments on the WMT16 to-English machine translation task. The WMT17
English-Chinese data is used for the BERT Chinese model. Layer 0 corresponds to using BPE embeddings. Consistently, correlation drops significantly in the final layers.
Published as a conference paper at ICLR 2020
C
ABLATION STUDY OF MOVERSCORE
Word Mover's Distance (WMD; Kusner et al., 2015) is a semantic similarity metric that relies on word embeddings and optimal transport. MOVERSCORE (Zhao et al., 2019) combines contextual embeddings and WMD for text generation evaluation. In contrast, BERTSCORE adopts a greedy approach to aggregate token-level information. In addition to using WMD for generation evaluation, Zhao et al. (2019) also introduce various other improvements. We do a detailed ablation study to understand the benefit of each improvement, and to investigate whether it can be applied to
BERTSCORE. We use a 12-layer uncased BERT model on the WMT17 to-English segment-level data, the same setting as Zhao et al. (2019).
We identify several differences between MOVERSCORE and BERTSCORE by analyzing the released source code. We isolate each difference, and mark it with a bracketed tag for our ablation study:
1. [MNLI] Use a BERT model fine-tuned on MNLI (Williams et al., 2018).
2. [PMEANS] Apply power means (Rücklé et al., 2018) to aggregate the information of different layers.9
3. [IDF-L] For reference sentences, instead of computing the idf scores on the 560 sentences in the segment-level data ([IDF-S]), compute the idf scores on the 3,005 sentences in the system-level data.
4. [SEP] For candidate sentences, recompute the idf scores on the candidate sentences. The weighting of reference tokens are kept the same as in [IDF-S]
5. [RM] Exclude punctuation marks and sub-word tokens except the first sub-word in each word from the matching.
We follow the setup of Zhao et al. (2019) and use their released fine-tuned BERT model to conduct the experiments.
Table 9 shows the results of our ablation study.
We report correlations for the two variants of WMD Zhao et al. (2019) study: unigrams (WMD1) and bigrams (WMD2). Our FBERT corresponds to the vanilla setting and the importance weighted variant corresponds to the [IDF-S] setting.
The complete MOVERSCORE metric corresponds to
[IDF-S]+[SEP]+[PMEANS]+[MNLI]+[RM]. We make several observations. First, for all language pairs except fi-en and lv-en, we can replicate the reported performance. For these two language pairs, Zhao et al. (2019) did not release their implementations at the time of publication.10
Second, we confirm the effectiveness of [PMEANS] and [MNLI]. In Appendix F, we study more pre-trained models and further corroborate this conclusion. However, the contribution of other techniques, including [RM] and [SEP], seems less stable. Third, replacing greedy matching with
WMD does not lead to consistent improvement. In fact, oftentimes BERTSCORE is the better metric when given the same setup. In general, for any given language pair, BERTSCORE is always among the best performing ones. Given the current results, it is not clear tht WMD is better than greedy matching for text generation evaluation.
9 Zhao et al. (2019) uses the embeddings from the last five layers from BERT and L2-normalizes the embedding vectors at each layer before computing the P-MEANs and L2-normalizing the concatenated P-MEANS.
10A public comment on the project page indicates that some of the techniques are not applied for these two language pairs (https://github.com/AIPHES/emnlp19-moverscore/issues/1).
Published as a conference paper at ICLR 2020
Ablation
Metric cs-en de-en fi-en lv-en ru-en tr-en zh-en
Vanilla
WMD1
WMD2
FBERT
IDF-S
WMD1
WMD2
FBERT
IDF-L
WMD1
WMD2
FBERT
IDF-L + SEP
WMD1
WMD2
FBERT
IDF-L + SEP
+ RM
WMD1
WMD2
FBERT
IDF-L + SEP
+ PMEANS
WMD1
WMD2
FBERT
IDF-L + SEP
+ MNLI
WMD1
WMD2
FBERT
IDF-L + SEP
+ PMEANS + MNLI
WMD1
WMD2
FBERT
IDF-L + SEP
+ PMEANS + MNLI
+ RM
WMD1
WMD2
FBERT
Table 9: Ablation Study of MOVERSCORE and BERTSCORE using Pearson correlations on the WMT17 to-English segment-level data. Correlations that are not outperformed by others for that language pair under Williams Test are bolded. We observe that using WMD does not consistently improve BERTSCORE.
Published as a conference paper at ICLR 2020
Type
Metric
Meaning
Grammar
Combined
BERTSCORE
PBERT
RBERT
FBERT
Common metrics
BLEU
METEOR
ROUGE-L
SARI
Best metrics according to
Toutanova et al. (2016)
SKIP-2+RECALL+MULT-PROB
N/A
PARSE-2+RECALL+MULT-MAX
N/A
PARSE-2+RECALL+MULT-PROB
Table 10: Pearson correlations with human judgments on the MSR Abstractive Text Compression
Dataset.
D
ADDITIONAL EXPERIMENTS ON ABSTRACTIVE TEXT COMPRESSION
We use the human judgments provided from the MSR Abstractive Text Compression
Dataset (Toutanova et al., 2016) to illustrate the applicability of BERTSCORE to abstractive text compression evaluation. The data includes three types of human scores: (a) meaning: how well a compressed text preserve the meaning of the original text; (b) grammar: how grammatically correct a compressed text is; and (c) combined: the average of the meaning and the grammar scores. We follow the experimental setup of Toutanova et al. (2016) and report Pearson correlation between BERTSCORE and the three types of human scores. Table 10 shows that RBERT has the highest correlation with human meaning judgments, and PBERT correlates highly with human grammar judgments. FBERT provides a balance between the two aspects.
Published as a conference paper at ICLR 2020
Task
Model
BLEU
ˆPBERT
ˆRBERT
ˆFBERT
PBERT
RBERT
FBERT
WMT14
En-De
ConvS2S (Gehring et al., 2017)
Transformer-big∗∗ (Ott et al., 2018)
DynamicConv∗∗∗ (Wu et al., 2019)
WMT14
En-Fr
ConvS2S (Gehring et al., 2017)
Transformer-big (Ott et al., 2018)
DynamicConv (Wu et al., 2019)
IWSLT14
De-En
Transformer-iwslt+ (Ott et al., 2019) 0.350
LightConv (Wu et al., 2019)
DynamicConv (Wu et al., 2019)
Table 11:
BLEU scores and BERTSCOREs of publicly available pre-trained MT models in fairseq (Ott et al., 2019). We show both rescaled scores marked with ˆ and raw BERTSCOREs.
∗: trained on unconfirmed WMT data version, ∗∗: trained on WMT16 + ParaCrawl, ∗∗∗: trained on
WMT16, +: trained by us using fairseq.
E
BERTSCORE OF RECENT MT MODELS
Table 11 shows the BLEU scores and the BERTSCOREs of pre-trained machine translation models on WMT14 English-to-German, WMT14 English-to-French, IWSLT14 German-to-English task.
We used publicly available pre-trained models from fairseq (Ott et al., 2019).11 Because a pretrained Transformer model on IWSLT is not released, we trained our own using the fairseq library.
We use multilingual cased BERTbase12 for English-to-German and English-to-French pairs, and English uncased BERTbase13 for German-to-English pairs. Interestingly, the gap between a DynamicConv (Wu et al., 2019) trained on only WMT16 and a Transformer (Ott et al., 2018) trained on WMT16 and ParaCrawl14 (about 30× more training data) becomes larger when evaluated with
BERTSCORE rather than BLEU.
11 Code and pre-trained model available at https://github.com/pytorch/fairseq.
12Hash code: bert-base-multilingual-cased_L9_version=0.2.0
13Hash code: roberta-large_L17_version=0.2.0
14http://paracrawl.eu/download.html
Published as a conference paper at ICLR 2020
F
ADDITIONAL RESULTS
In this section, we present additional experimental results:
1. Segment-level and system-level correlation studies on three years of WMT metric evaluation task (WMT16–18)
2. Model selection study on WMT18 10K hybrid systems
3. System-level correlation study on 2015 COCO captioning challenge
4. Robustness study on PAWS-QQP.
Following BERT (Devlin et al., 2019), a variety of Transformer-based (Vaswani et al., 2017) pretrained contextual embeddings have been proposed and released. We conduct additional experiments with four types of pre-trained embeddings: BERT, XLM (Lample & Conneau, 2019), XLNet (Yang et al., 2019b), and RoBERTa (Liu et al., 2019b). XLM (Cross-lingual Language Model) is a Transformer pre-trained on the translation language modeling of predicting masked tokens from a pair of sentence in two different languages and masked language modeling tasks using multi-lingual training data. Yang et al. (2019b) modify the Transformer architecture and pre-train it on a permutation language modeling task resulting in some improvement on top of the original BERT when fine-tuned on several downstream tasks. Liu et al. (2019b) introduce RoBERTa (Robustly optimized BERT approach) and demonstrate that an optimized BERT model is comparable to or sometimes outperforms an XLNet on downstream tasks.
We perform a comprehensive study with the following pre-trained contextual embedding models:15
• BERT models: bert-base-uncased, bert-large-uncased, bert-based-chinese, bert-base-multilingual-cased, and bert-base-cased-mrpc
• RoBERTa models: roberta-base, roberta-large, and roberta-large-mnli
• XLNet models: xlnet-base-cased and xlnet-base-large
• XLM models: xlm-mlm-en-2048 and xlm-mlm-100-1280
F.1
WMT CORRELATION STUDY
Experimental setup
Because of missing data in the released WMT16 dataset (Bojar et al., 2016), we are only able to experiment with to-English segment-level data, which contains the outputs of 50 different systems on 6 language pairs. We use this data as the validation set for hyperparameter tuning (Appendix B). Table 12 shows the Pearson correlations of all participating metrics and BERTSCOREs computed with different pre-trained models. Significance testing for this dataset does not include the baseline metrics because the released dataset does not contain the original outputs from the baseline metrics. We conduct significance testing between BERTSCORE results only.
The WMT17 dataset (Bojar et al., 2017) contains outputs of 152 different translations on 14 language pairs. We experiment on the segment-level and system-level data on both to-English and from-English language pairs. We exclude fi-en data from the segment-level experiment due to an error in the released data. We compare our results to all participating metrics and perform standard significance testing as done by Bojar et al. (2017). Tables 13–16 show the results.
The WMT18 dataset (Ma et al., 2018) contains outputs of 159 translation systems on 14 language pairs. In addition to the results in Tables 1–4, we complement the study with the correlations of all participating metrics in WMT18 and results from using different contextual models for
BERTSCORE.
Results
Table 12–22 collectively showcase the effectiveness of BERTSCORE in correlating with human judgments. The improvement of BERTSCORE is more pronounced on the segment-level than on the system-level. We also see that more optimized or larger BERT models can produce better contextual representations (e.g., comparing FRoBERTa–Large and FBERT–Large). In contrast, the smaller
XLNet performs better than a large one. Based on the evidence in Figure 8 and Tables 12–22, we
15Denoted by names specified at https://huggingface.co/pytorch-transformers/pretrained_models.html.
Published as a conference paper at ICLR 2020 hypothesize that the permutation language task, though leading to a good set of model weights for fine-tuning on downstream tasks, does not necessarily produce informative pre-trained embeddings for generation evaluation. We also observe that fine-tuning pre-trained models on a related task, such as natural language inference (Williams et al., 2018), can lead to better human correlation in evaluating text generation. Therefore, for evaluating English sentences, we recommend computing
BERTSCORE with a 24-layer RoBERTa model fine-tuned on the MNLI dataset. For evaluating
Non-English sentences, both the multilingual BERT model and the XLM model trained on 100 languages are suitable candidates. We also recommend using domain- or language-specific contextual embeddings when possible, such as using BERT Chinese models for evaluating Chinese tasks.
In general, we advise users to consider the target domain and languages when selecting the exact configuration to use.
F.2
MODEL SELECTION STUDY
Experimental setup
Similar to Section 4, we use the 10K hybrid systems super-sampled from
WMT18. We randomly select 100 out of 10K hybrid systems, rank them using automatic metrics, and repeat this process 100K times. We add to the results in the main paper (Table 3) performance of all participating metrics in WMT18 and results from using different contextual embedding models for BERTSCORE. We reuse the hybrid configuration and metric outputs released in WMT18. In addition to the Hits@1 measure, we evaluate the metrics using (a) mean reciprocal rank (MRR) of the top metric-rated system in human rankings, and (b) the absolute human score difference (Diff) between the top metric- and human-rated systems. Hits@1 captures a metric's ability to select the best system. The other two measures quantify the amount of error a metric makes in the selection process. Tables 23–28 show the results from these experiments.
Results
The additional results further support our conclusion from Table 3: BERTSCORE demonstrates better model selection performance. We also observe that the supervised metric RUSE displays strong model selection ability.
F.3
IMAGE CAPTIONING ON COCO
We follow the experimental setup described in Section 4. Table 29 shows the correlations of several pre-trained contextual embeddings. We observe that precision-based methods such as BLEU and PBERT are weakly correlated with human judgments on image captioning tasks. We hypothesize that this is because human judges prefer captions that capture the main objects in a picture for image captioning. In general, RBERT has a high correlation, even surpassing the task-specific metric
SPICE Anderson et al. (2016). While the fine-tuned RoBERTa-Large model does not result in the highest correlation, it is one of the best metrics.
F.4
ROBUSTNESS ANALYSIS ON PAWS-QQP
We present the full results of the robustness study described in Section 6 in Table 30. In general, we observe that BERTSCORE is more robust than other commonly used metrics. BERTSCORE computed with the 24-layer RoBERTa model performs the best. Fine-tuning RoBERTa-Large on
MNLI (Williams et al., 2018) can significantly improve the robustness against adversarial sentences.
However, a fine-tuned BERT on MRPC (Microsoft Research Paraphrasing Corpus) (Dolan & Brockett, 2005) performs worse than its counterpart.
Published as a conference paper at ICLR 2020
Setting
Metric cs-en de-en fi-en ro-en ru-en tr-en
Unsupervised
DPMFCOMB
METRICS-F
COBALT-F.
UPF-COBA.
MPEDA
CHRF2
CHRF3
CHRF1
UOW-REVAL
WORDF3
WORDF2
WORDF1
SENTBLEU
DTED
Supervised
BEER
Pre-Trained
PBERT–Base
RBERT–Base
FBERT–Base
PBERT–Base (no idf)
RBERT–Base (no idf)
FBERT–Base (no idf)
PBERT–Base–MRPC
RBERT–Base–MRPC
FBERT–Base–MRPC
PBERT–Base–MRPC (idf)
RBERT–Base–MRPC (idf)
FBERT–Base–MRPC (idf)
PBERT–Large
RBERT–Large
FBERT–Large
PBERT–Large (idf)
RBERT–Large (idf)
FBERT–Large (idf)
PRoBERTa–Base
RRoBERTa–Base
FRoBERTa–Base
PRoBERTa–Base (idf)
RRoBERTa–Base (idf)
FRoBERTa–Base (idf)
PRoBERTa–Large
RRoBERTa–Large
FRoBERTa–Large
PRoBERTa–Large (idf)
RRoBERTa–Large (idf)
FRoBERTa–Large (idf)
PRoBERTa–Large–MNLI
RRoBERTa–Large–MNLI
FRoBERTa–Large–MNLI
PRoBERTa–Large–MNLI (idf)
RRoBERTa–Large–MNLI (idf)
FRoBERTa–Large–MNLI (idf)
PXLNet–Base
RXLNet–Base
FXLNet–Base
PXLNet–Base (idf)
RXLNet–Base (idf)
FXLNet–Base (idf)
PXL-NET–LARGE
RXL-NET–LARGE
FXL-NET–LARGE
PXL-NET–LARGE (idf)
RXL-NET–LARGE (idf)
FXL-NET–LARGE (idf)
PXLM–En
RXLM–En
FXLM–En
PXLM–En (idf)
RXLM–En (idf)
FXLM–En (idf)
Table 12: Pearson correlations with segment-level human judgments on WMT16 to-English translations. Correlations of metrics not significantly outperformed by any other for that language pair are highlighted in bold. For each language pair, we specify the number of examples.
Published as a conference paper at ICLR 2020
Setting
Metric cs-en de-en fi-en lv-en ru-en tr-en zh-en
Unsupervised
CHRF
CHRF++
MEANT 2.0
MEANT 2.0-NOSRL
SENTBLEU
TREEAGGREG
UHH_TSKM
Supervised
AUTODA
BEER
BLEND
BLEU2VEC
NGRAM2VEC
Pre-Trained
PBERT–Base
RBERT–Base
FBERT–Base
PBERT–Base (idf)
RBERT–Base (idf)
FBERT–Base (idf)
PBERT–Base–MRPC
RBERT–Base–MRPC
FBERT–Base–MRPC
PBERT–Base–MRPC (idf)
RBERT–Base–MRPC (idf)
FBERT–Base–MRPC (idf)
PBERT–Large
RBERT–Large
FBERT–Large
PBERT–Large (idf)
RBERT–Large (idf)
FBERT–Large (idf)
PRoBERTa–Base
RRoBERTa–Base
FRoBERTa–Base
PRoBERTa–Base (idf)
RRoBERTa–Base (idf)
FRoBERTa–Base (idf)
PRoBERTa–Large
RRoBERTa–Large
FRoBERTa–Large
PRoBERTa–Large (idf)
RRoBERTa–Large (idf)
FRoBERTa–Large (idf)
PRoBERTa–Large–MNLI
RRoBERTa–Large–MNLI
FRoBERTa–Large–MNLI
PRoBERTa–Large–MNLI (idf)
RRoBERTa–Large–MNLI (idf)
FRoBERTa–Large–MNLI (idf)
PXLNET–Base
RXLNET–Base
FXLNET–Base
PXLNET–Base (idf)
RXLNET–Base (idf)
FXLNET–Base (idf)
PXLNET–Large
RXLNET–Large
FXLNET–Large
PXLNET–Large (idf)
RXLNET–Large (idf)
FXLNET–Large (idf)
PXLM–En
RXLM–En
FXLM–En
PXLM–En (idf)
RXLM–En (idf)
FXLM–En (idf)
Table 13: Absolute Pearson correlations with segment-level human judgments on WMT17 toEnglish translations. Correlations of metrics not significantly outperformed by any other for that language pair are highlighted in bold. For each language pair, we specify the number of examples.
Published as a conference paper at ICLR 2020
Setting
Metric en-cs en-de en-fi en-lv en-ru en-tr en-zh
32K
3K
3K
3K
560 τ τ τ τ
|r| τ
|r|
Unsupervised
AUTODA
AUTODA-TECTOCHRF
CHRF+CHRF++
MEANT 2.0MEANT 2.0-NOSRL
SENTBLEU
TREEAGGREG
Supervised
BEER
BLENDBLEU2VECNGRAM2VECPre-Trained
PBERT–Multi
RBERT–Multi
FBERT–Multi
PBERT–Multi (idf)
RBERT–Multi (idf)
FBERT–Multi (idf)
PXLM–100
RXLM–100
FXLM–100
PXLM–100 (idf)
RXLM–100 (idf)
FXLM–100 (idf)
Table 14: Absolute Pearson correlation (|r|) and Kendall correlation (τ) with segment-level human judgments on WMT17 from-English translations. Correlations of metrics not significantly outperformed by any other for that language pair are highlighted in bold. For each language pair, we specify the number of examples.
Published as a conference paper at ICLR 2020
Setting
Metric cs-en de-en fi-en lv-en ru-en tr-en zh-en
Unsupervised
BLEU
CDER
CHARACTER
CHRF
CHRF++
MEANT 2.0
MEANT 2.0-NOSRL
NIST
PER
TER
TREEAGGREG
UHH_TSKM
WER
Supervised
AUTODA
BEER
BLEND
BLEU2VEC
NGRAM2VEC
Pre-Trained
PBERT–Base
RBERT–Base
FBERT–Base
PBERT–Base (idf)
RBERT–Base (idf)
FBERT–Base (idf)
PBERT–Base–MRPC
RBERT–Base–MRPC
FBERT–Base–MRPC
PBERT–Base–MRPC (idf)
RBERT–Base–MRPC (idf)
FBERT–Base–MRPC (idf)
PBERT–Large
RBERT–Large
FBERT–Large
PBERT–Large (idf)
RBERT–Large (idf)
FBERT–Large (idf)
PRoBERTa–Base
RRoBERTa–Base
FRoBERTa–Base
PRoBERTa–Base (idf)
RRoBERTa–Base (idf)
FRoBERTa–Base (idf)
PRoBERTa–Large
RRoBERTa–Large
FRoBERTa–Large
PRoBERTa–Large (idf)
RRoBERTa–Large (idf)
FRoBERTa–Large (idf)
PRoBERTa–Large–MNLI
RRoBERTa–Large–MNLI
FRoBERTa–Large–MNLI
PRoBERTa–Large–MNLI (idf)
RRoBERTa–Large–MNLI (idf)
FRoBERTa–Large–MNLI (idf)
PXLNET–Base
RXLNET–Base
FXLNET–Base
PXLNET–Base (idf)
RXLNET–Base (idf)
FXLNET–Base (idf)
PXLNET–Large
RXLNET–Large
FXLNET–Large
PXLNET–Large (idf)
RXLNET–Large (idf)
FXLNET–Large (idf)
PXLM–En
RXLM–En
FXLM–En
PXLM–En (idf)
RXLM–En (idf)
FXLM–En (idf)
Table 15: Absolute Pearson correlations with system-level human judgments on WMT17 to-English translations. Correlations of metrics not significantly outperformed by any other for that language pair are highlighted in bold. For each language pair, we specify the number of systems.
Published as a conference paper at ICLR 2020
Setting
Metric en-cs en-de en-lv en-ru en-tr en-zh
Unsupervised
BLEU
–
CDER
–
CHARACTER
CHRF
CHRF++
MEANT 2.0
–
–
–
–
MEANT 2.0-NOSRL
NIST
–
PER
–
TER
–
TREEAGGREG
UHH_TSKM
–
–
–
–
–
–
WER
–
Supervised
AUTODA
BEER
BLEND
–
–
–
–
–
BLEU2VEC
–
NGRAM2VEC
–
–
–
–
–
Pre-Trained
PBERT–Multi
RBERT–Multi
FBERT–Multi
PBERT–Multi (idf)
RBERT–Multi (idf)
FBERT–Multi (idf)
PXLM–100
RXLM–100
FXLM–100
PXLM–100 (idf)
RXLM–100 (idf)
FXLM–100 (idf)
Table 16: Absolute Pearson correlations with system-level human judgments on WMT17 fromEnglish translations. Correlations of metrics not significantly outperformed by any other for that language pair are highlighted in bold. For each language pair, we specify the number of systems.
Published as a conference paper at ICLR 2020
Setting
Metric cs-en de-en et-en fi-en ru-en tr-en zh-en
5K
78K
57K
16K
10K
9K
33K
Unsupervised
CHARACTER
ITER
-0.029
METEOR++
SENTBLEU
UHH_TSKM
YISI-0
YISI-1
YISI-1 SRL
Supervised
BEER
BLEND
RUSE
Pre-Trained
PBERT–Base
RBERT–Base
FBERT–Base
PBERT–Base (idf)
RBERT–Base (idf)
FBERT–Base (idf)
PBERT–Base–MRPC
RBERT–Base–MRPC
FBERT–Base–MRPC
PBERT–Base–MRPC (idf)
RBERT–Base–MRPC (idf)
FBERT–Base–MRPC (idf)
PBERT–LARGE
RBERT–LARGE
FBERT–LARGE
PBERT–LARGE (idf)
RBERT–LARGE (idf)
FBERT–LARGE (idf)
PRoBERTa–Base
RRoBERTa–Base
FRoBERTa–Base
PRoBERTa–Base (idf)
RRoBERTa–Base (idf)
FRoBERTa–Base (idf)
PRoBERTa–LARGE
RRoBERTa–LARGE
FRoBERTa–LARGE
PRoBERTa–LARGE (idf)
RRoBERTa–LARGE (idf)
FRoBERTa–LARGE (idf)
PRoBERTa–Large–MNLI
RRoBERTa–Large–MNLI
FRoBERTa–Large–MNLI
PRoBERTa–Large–MNLI (idf)
RRoBERTa–Large–MNLI (idf)
FRoBERTa–Large–MNLI (idf)
PXLNet–Base
RXLNet–Base
FXLNet–Base
PXLNet–Base (idf)
RXLNet–Base (idf)
FXLNet–Base (idf)
PXL-NET–LARGE
RXL-NET–LARGE
FXL-NET–LARGE
PXL-NET–LARGE (idf)
RXL-NET–LARGE (idf)
FXL-NET–LARGE (idf)
PXLM–En
RXLM–En
FXLM–En
PXLM–En (idf)
RXLM–En (idf)
FXLM–En (idf)
Table 17: Kendall correlations with segment-level human judgments on WMT18 to-English translations. Correlations of metrics not significantly outperformed by any other for that language pair are highlighted in bold. For each language pair, we specify the number of examples.
Published as a conference paper at ICLR 2020
Setting
Metric en-cs en-de en-et en-fi en-ru en-tr en-zh
5K
20K
32K
10K
22K
1K
29K
Unsupervised
CHARACTER
ITERSENTBLEU
YISI-0
YISI-1
YISI-1 SRLSupervised
BEER
BLENDPre-Trained
PBERT–Multi
RBERT–Multi
FBERT–Multi
PBERT–Multi (idf)
RBERT–Multi (idf)
FBERT–Multi (idf)
PXLM–100
RXLM–100
FXLM–100
PXLM–100 (idf)
RXLM–100 (idf)
FXLM–100 (idf)
Table 18: Kendall correlations with segment-level human judgments on WMT18 from-English translations. Correlations of metrics not significantly outperformed by any other for that language pair are highlighted in bold. For each language pair, we specify the number of examples.
Published as a conference paper at ICLR 2020
Setting
Metric cs-en de-en et-en fi-en ru-en tr-en zh-en
Unsupervised
BLEU
CDER
CHARACTER
ITER
METEOR++
NIST
PER
TER
UHH_TSKM
WER
YISI-0
YISI-1
YISI-1 SRL
Supervised
BEER
BLEND
RUSE
Pre-Trained
PBERT–Base
RBERT–Base
FBERT–Base
PBERT–Base (idf)
RBERT–Base (idf)
FBERT–Base (idf)
PBERT–Base–MRPC
RBERT–Base–MRPC
FBERT–Base–MRPC
PBERT–Base–MRPC (idf)
RBERT–Base–MRPC (idf)
FBERT–Base–MRPC (idf)
PBERT–Large
RBERT–Large
FBERT–Large
PBERT–Large (idf)
RBERT–Large (idf)
FBERT–Large (idf)
PRoBERTa–Base
RRoBERTa–Base
FRoBERTa–Base
PRoBERTa–Base (idf)
RRoBERTa–Base (idf)
FRoBERTa–Base (idf)
PRoBERTa–Large
RRoBERTa–Large
FRoBERTa–Large
PRoBERTa–Large (idf)
RRoBERTa–Large (idf)
FRoBERTa–Large (idf)
PRoBERTa–Large–MNLI
RRoBERTa–Large–MNLI
FRoBERTa–Large–MNLI
PRoBERTa–Large–MNLI (idf)
RRoBERTa–Large–MNLI (idf)
FRoBERTa–Large–MNLI (idf)
PXLNET–Base
RXLNET–Base
FXLNET–Base
PXLNET–Base (idf)
RXLNET–Base (idf)
FXLNET–Base (idf)
PXLNET–Large
RXLNET–Large
FXLNET–Large
PXLNET–Large (idf)
RXLNET–Large (idf)
FXLNET–Large (idf)
PXLM–En
RXLM–En
FXLM–En
PXLM–En (idf)
RXLM–En (idf)
FXLM–En (idf)
Table 19: Absolute Pearson correlations with system-level human judgments on WMT18 to-English translations. Correlations of metrics not significantly outperformed by any other for that language pair are highlighted in bold. For each language pair, we specify the number of systems.
Published as a conference paper at ICLR 2020
Setting
Metric en-cs en-de en-et en-fi en-ru en-tr en-zh
Unsupervised
BLEU
CDER
CHARACTER
ITER
–
METEOR++
–
–
–
–
–
–
–
NIST
PER
TER
UHH_TSKM
–
–
–
–
–
–
–
WER
YISI-0
YISI-1
YISI-1 SRL
–
–
–
–
–
Supervised
BEER
BLEND
–
–
–
–
–
–
RUSE
–
–
–
–
–
–
–
Pre-Trained
PBERT–Multi
RBERT–Multi
FBERT–Multi
PBERT–Multi (idf)
RBERT–Multi (idf)
FBERT–Multi (idf)
PXLM–100
RXLM–100
FXLM–100
PXLM–100 (idf)
RXLM–100 (idf)
FXLM–100 (idf)
Table 20: Absolute Pearson correlations with system-level human judgments on WMT18 fromEnglish translations. Correlations of metrics not significantly outperformed by any other for that language pair are highlighted in bold. For each language pair, we specify the number of systems.
Published as a conference paper at ICLR 2020
Setting
Metric cs-en de-en et-en fi-en ru-en tr-en zh-en
10K
10K
10K
10K
10K
10K
10K
Unsupervised
BLEU
CDER
CHARACTER
ITER
METEOR++
NIST
PER
TER
UHH_TSKM
WER
YISI-0
YISI-1
YISI-1 SRL
Supervised
BEER
BLEND
RUSE
Pre-Trained
PBERT–Base
RBERT–Base
FBERT–Base
PBERT–Base (idf)
RBERT–Base (idf)
FBERT–Base (idf)
PBERT–Base–MRPC
RBERT–Base–MRPC
FBERT–Base–MRPC
PBERT–Base–MRPC (idf)
RBERT–Base–MRPC (idf)
FBERT–Base–MRPC (idf)
PBERT–Large
RBERT–Large
FBERT–Large
PBERT–Large (idf)
RBERT–Large (idf)
FBERT–Large (idf)
PRoBERTa–Base
RRoBERTa–Base
FRoBERTa–Base
PRoBERTa–Base (idf)
RRoBERTa–Base (idf)
FRoBERTa–Base (idf)
PRoBERTa–Large
RRoBERTa–Large
FRoBERTa–Large
PRoBERTa–Large (idf)
RRoBERTa–Large (idf)
FRoBERTa–Large (idf)
PRoBERTa–Large–MNLI
RRoBERTa–Large–MNLI
FRoBERTa–Large–MNLI
PRoBERTa–Large–MNLI (idf)
RRoBERTa–Large–MNLI (idf)
FRoBERTa–Large–MNLI (idf)
PXLNET–Base
RXLNET–Base
FXLNET–Base
PXLNET–Base (idf)
RXLNET–Base (idf)
FXLNET–Base (idf)
PXLNET–Large
RXLNET–Large
FXLNET–Large
PXLNET–Large (idf)
RXLNET–Large (idf)
FXLNET–Large (idf)
PXLM–En
RXLM–En
FXLM–En
PXLM–En (idf)
RXLM–En (idf)
FXLM–En (idf)
Table 21: Absolute Pearson correlations with human judgments on WMT18 to-English language pairs for 10K hybrid systems. Correlations of metrics not significantly outperformed by any other for that language pair are highlighted in bold. For each language pair, we specify the number of systems.
Published as a conference paper at ICLR 2020
Setting
Metric en-cs en-de en-et en-fi en-ru en-tr en-zh
10K
10K
10K
10K
10K
10K
10K
Unsupervised
BLEU
CDER
CHARACTER
ITER
–
METEOR++
–
–
–
–
–
–
–
NIST
PER
TER
UHH_TSKM
–
–
–
–
–
–
–
WER
YISI-0
YISI-1
YISI-1 SRL
–
–
–
–
–
Supervised
BEER
BLEND
–
–
–
–
–
–
RUSE
–
–
–
–
–
–
–
Pre-Trained
PBERT–Multi
RBERT–Multi
FBERT–Multi
PBERT–Multi (idf)
RBERT–Multi (idf)
FBERT–Multi (idf)
PXLM–100
RXLM–100
FXLM–100
PXLM–100 (idf)
RXLM–100 (idf)
FXLM–100 (idf)
Table 22: Absolute Pearson correlations with human judgments on WMT18 from-English language pairs for 10K hybrid systems. Correlations of metrics not significantly outperformed by any other for that language pair are highlighted in bold. For each language pair, we specify the number of systems.
Published as a conference paper at ICLR 2020
Setting
Metric cs-en de-en et-en fi-en ru-en tr-en zh-en
Unsupervised
BLEU
CDER
CHARACTER
ITER
METEOR++
NIST
PER
TER
UHH_TSKM
WER
YISI-0
YISI-1
YISI-1 SRL
Supervised
BEER
BLEND
RUSE
Pre-Trained
PBERT–Base
RBERT–Base
FBERT–Base
PBERT–Base (idf)
RBERT–Base (idf)
FBERT–Base (idf)
PBERT–Base–MRPC
RBERT–Base–MRPC
FBERT–Base–MRPC
PBERT–Base–MRPC (idf)
RBERT–Base–MRPC (idf)
FBERT–Base–MRPC (idf)
PBERT–Large
RBERT–Large
FBERT–Large
PBERT–Large (idf)
RBERT–Large (idf)
FBERT–Large (idf)
PRoBERTa–Base
RRoBERTa–Base
FRoBERTa–Base
PRoBERTa–Base (idf)
RRoBERTa–Base (idf)
FRoBERTa–Base (idf)
PRoBERTa–Large
RRoBERTa–Large
FRoBERTa–Large
PRoBERTa–Large (idf)
RRoBERTa–Large (idf)
FRoBERTa–Large (idf)
PRoBERTa–Large–MNLI
RRoBERTa–Large–MNLI
FRoBERTa–Large–MNLI
PRoBERTa–Large–MNLI (idf)
RRoBERTa–Large–MNLI (idf)
FRoBERTa–Large–MNLI (idf)
PXLNET–Base
RXLNET–Base
FXLNET–Base
PXLNET–Base (idf)
RXLNET–Base (idf)
FXLNET–Base (idf)
PXLNET–Large
RXLNET–Large
FXLNET–Large
PXLNET–Large (idf)
RXLNET–Large (idf)
FXLNET–Large (idf)
PXLM–En
RXLM–En
FXLM–En
PXLM–En (idf)
RXLM–En (idf)
FXLM–En (idf)
Table 23: Model selection accuracies (Hits@1) on to-English WMT18 hybrid systems. We report the average of 100K samples and the 0.95 confidence intervals are below 10−3. We bold the highest numbers for each language pair and direction.
Published as a conference paper at ICLR 2020
Setting
Metric cs-en de-en et-en fi-en ru-en tr-en zh-en
Unsupervised
BLEU
CDER
CHARACTER
ITER
METEOR++
NIST
PER
TER
UHH_TSKM
WER
YISI-0
YISI-1
YISI-1 SRL
Supervised
BEER
BLEND
RUSE
Pre-Trained
PBERT–Base
RBERT–Base
FBERT–Base
PBERT–Base (idf)
RBERT–Base (idf)
FBERT–Base (idf)
PBERT–Base–MRPC
RBERT–Base–MRPC
FBERT–Base–MRPC
PBERT–Base–MRPC (idf)
RBERT–Base–MRPC (idf)
FBERT–Base–MRPC (idf)
PBERT–Large
RBERT–Large
FBERT–Large
PBERT–Large (idf)
RBERT–Large (idf)
FBERT–Large (idf)
PRoBERTa–Base
RRoBERTa–Base
FRoBERTa–Base
PRoBERTa–Base (idf)
RRoBERTa–Base (idf)
FRoBERTa–Base (idf)
PRoBERTa–Large
RRoBERTa–Large
FRoBERTa–Large
PRoBERTa–Large (idf)
RRoBERTa–Large (idf)
FRoBERTa–Large (idf)
PRoBERTa–Large–MNLI
RRoBERTa–Large–MNLI
FRoBERTa–Large–MNLI
PRoBERTa–Large–MNLI (idf)
RRoBERTa–Large–MNLI (idf)
FRoBERTa–Large–MNLI (idf)
PXLNET–Base
RXLNET–Base
FXLNET–Base
PXLNET–Base (idf)
RXLNET–Base (idf)
FXLNET–Base (idf)
PXLNET–Large
RXLNET–Large
FXLNET–Large
PXLNET–Large (idf)
RXLNET–Large (idf)
FXLNET–Large (idf)
PXLM–En
RXLM–En
FXLM–En
PXLM–En (idf)
RXLM–En (idf)
FXLM–En (idf)
Table 24: Mean Reciprocal Rank (MRR) of the top metric-rated system on to-English WMT18 hybrid systems. We report the average of 100K samples and the 0.95 confidence intervals are below
10−3. We bold the highest numbers for each language pair and direction.
Published as a conference paper at ICLR 2020
Setting
Metric cs-en de-en et-en fi-en ru-en tr-en zh-en
Unsupervised
BLEU
CDER
CHARACTER
ITER
METEOR++
NIST
PER
TER
UHH_TSKM
WER
YISI-0
YISI-1
YISI-1 SRL
Supervised
BEER
BLEND
RUSE
Pre-Trained
PBERT–Base
RBERT–Base
FBERT–Base
PBERT–Base (idf)
RBERT–Base (idf)
FBERT–Base (idf)
PBERT–Base–MRPC
RBERT–Base–MRPC
FBERT–Base–MRPC
PBERT–Base–MRPC (idf)
RBERT–Base–MRPC (idf)
FBERT–Base–MRPC (idf)
PBERT–Large
RBERT–Large
FBERT–Large
PBERT–Large (idf)
RBERT–Large (idf)
FBERT–Large (idf)
PRoBERTa–Base
RRoBERTa–Base
FRoBERTa–Base
PRoBERTa–Base (idf)
RRoBERTa–Base (idf)
FRoBERTa–Base (idf)
PRoBERTa–Large
RRoBERTa–Large
FRoBERTa–Large
PRoBERTa–Large (idf)
RRoBERTa–Large (idf)
FRoBERTa–Large (idf)
PRoBERTa–Large–MNLI
RRoBERTa–Large–MNLI
FRoBERTa–Large–MNLI
PRoBERTa–Large–MNLI (idf)
RRoBERTa–Large–MNLI (idf)
FRoBERTa–Large–MNLI (idf)
PXLNET–Base
RXLNET–Base
FXLNET–Base
PXLNET–Base (idf)
RXLNET–Base (idf)
FXLNET–Base (idf)
PXLNET–Large
RXLNET–Large
FXLNET–Large
PXLNET–Large (idf)
RXLNET–Large (idf)
FXLNET–Large (idf)
PXLM–En
RXLM–En
FXLM–En
PXLM–En (idf)
RXLM–En (idf)
FXLM–En (idf)
Table 25: Absolute Difference (×100) of the top metric-rated and the top human-rated system on toEnglish WMT18 hybrid systems. Smaller difference signify higher agreement with human scores.
We report the average of 100K samples and the 0.95 confidence intervals are below 10−3. We bold the lowest numbers for each language pair and direction.
Published as a conference paper at ICLR 2020
Setting
Metric en-cs en-de en-et en-fi en-ru en-tr en-zh
Unsupervised
BLEU
CDER
CHARACTER
ITER
–
METEOR++
–
–
–
–
–
–
–
NIST
PER
TER
UHH_TSKM
–
–
–
–
–
–
–
WER
YISI-0
YISI-1
YISI-1 SRL
–
–
–
–
–
Supervised
BEER
BLEND
–
–
–
–
–
–
RUSE
–
–
–
–
–
–
–
Pre-Trained
PBERT–Multi
RBERT–Multi
FBERT–Multi
PBERT–Multi (idf)
RBERT–Multi (idf)
FBERT–Multi (idf)
PXLM–100
RXLM–100
FXLM–100
PXLM–100 (idf)
RXLM–100 (idf)
FXLM–100 (idf)
Table 26: Model selection accuracies (Hits@1) on to-English WMT18 hybrid systems. We report the average of 100K samples and the 0.95 confidence intervals are below 10−3. We bold the highest numbers for each language pair and direction.
Published as a conference paper at ICLR 2020
Setting
Metric en-cs en-de en-et en-fi en-ru en-tr en-zh
Unsupervised
BLEU
CDER
CHARACTER
ITER
–
METEOR++
–
–
–
–
–
–
–
NIST
PER
TER
UHH_TSKM
–
–
–
–
–
–
–
WER
YISI-0
YISI-1
YISI-1 SRL
–
–
–
–
–
Supervised
BEER
BLEND
–
–
–
–
–
–
RUSE
–
–
–
–
–
–
–
Pre-Trained
PBERT–Multi
RBERT–Multi
FBERT–Multi
PBERT–Multi (idf)
RBERT–Multi (idf)
FBERT–Multi (idf)
PXLM–100
RXLM–100
FXLM–100
PXLM–100 (idf)
RXLM–100 (idf)
FXLM–100 (idf)
Table 27: Mean Reciprocal Rank (MRR) of the top metric-rated system on to-English WMT18 hybrid systems. We report the average of 100K samples and the 0.95 confidence intervals are below
10−3. We bold the highest numbers for each language pair and direction.
Published as a conference paper at ICLR 2020
Setting
Metric en-cs en-de en-et en-fi en-ru en-tr en-zh
Unsupervised
BLEU
CDER
CHARACTER
ITER
–
METEOR++
–
–
–
–
–
–
–
NIST
PER
TER
UHH_TSKM
–
–
–
–
–
–
–
WER
YISI-0
YISI-1
YISI-1 SRL
–
–
–
–
–
Supervised
BEER
BLEND
–
–
–
–
–
–
RUSE
–
–
–
–
–
–
–
Pre-Trained
PBERT–Multi
RBERT–Multi
FBERT–Multi
PBERT–Multi (idf)
RBERT–Multi (idf)
FBERT–Multi (idf)
PXLM–100
RXLM–100
FXLM–100
PXLM–100 (idf)
RXLM–100 (idf)
FXLM–100 (idf)
Table 28: Absolute Difference (×100) of the top metric-rated and the top human-rated system on toEnglish WMT18 hybrid systems. Smaller difference indicate higher agreement with human scores.
We report the average of 100K samples and the 0.95 confidence intervals are below 10−3. We bold the lowest numbers for each language pair and direction.
Published as a conference paper at ICLR 2020
Metric
M1
M2
BLEU-1
0.124∗
0.135∗
BLEU-2
0.037∗
0.048∗
BLEU-3
0.004∗
0.016∗
BLEU-4
-0.019∗
-0.005∗
METEOR
0.606∗
0.594∗
ROUGE-L
0.090∗
0.096∗
CIDER
0.438∗
0.440∗
SPICE
0.759∗
0.750∗
LEIC
0.939∗
0.949∗
BEER
EED
CHRF++
CHARACTER
PBERT–Base
RBERT–Base
FBERT–Base
PBERT–Base (idf)
RBERT–Base (idf)
FBERT–Base (idf)
PBERT–Base–MRPC
RBERT–Base–MRPC
FBERT–Base–MRPC
PBERT–Base–MRPC (idf)
RBERT–Base–MRPC (idf)
FBERT–Base–MRPC (idf)
PBERT–Large
RBERT–Large
FBERT–Large
PBERT–Large (idf)
RBERT–Large (idf)
FBERT–Large (idf)
PRoBERTa–Base
-0.223
-0.179
RRoBERTa–Base
FRoBERTa–Base
PRoBERTa–Base (idf)
-0.256
-0.267
RRoBERTa–Base (idf)
FRoBERTa–Base (idf)
PRoBERTa–Large
-0.105
-0.041
RRoBERTa–Large
FRoBERTa–Large
PRoBERTa–Large (idf)
-0.011
RRoBERTa–Large (idf)
FRoBERTa–Large (idf)
PRoBERTa–Large–MNLI
RRoBERTa–Large–MNLI
FRoBERTa–Large–MNLI
PRoBERTa–Large–MNLI (idf)
RRoBERTa–Large–MNLI (idf)
FRoBERTa–Large–MNLI (idf)
PXLNet–Base
-0.046
RXLNet–Base
FXLNet–Base
PXLNet–Base (idf)
RXLNet–Base (idf)
FXLNet–Base (idf)
PXLNet–Large
-0.188
-0.115
RXLNet–Large
FXLNet–Large
-0.014
PXLNet–Large (idf)
-0.186
-0.072
RXLNet–Large (idf)
FXLNet–Large (idf)
PXLM–En
RXLM–En
FXLM–En
PXLM–En (idf)
RXLM–En (idf)
FXLM–En (idf)
Table 29: Pearson correlation on the 2015 COCO Captioning Challenge. The M1 and M2 measures are described in Section 4. We bold the best correlating task-specific and task-agnostic metrics in each setting LEIC uses images as additional inputs. Numbers with ∗ are cited from Cui et al. (2018).
Published as a conference paper at ICLR 2020
Type
Method
QQP
PAWSQQP
Trained on QQP (supervised)
DecAtt
0.939*
DIIN
0.952*
BERT
0.963*
Trained on QQP + PAWSQQP (supervised)
DecAttDIINBERTMetric (Not trained on QQP or PAWSQQP)
BLEU-1
BLEU-2
BLEU-3
BLEU-4
METEOR
ROUGE-L
CHRF++
BEER
EED
CHARACTER
PBERT–Base
RBERT–Base
FBERT–Base
PBERT–Base (idf)
RBERT–Base (idf)
FBERT–Base (idf)
PBERT–Base–MRPC
RBERT–Base–MRPC
FBERT–Base–MRPC
PBERT–Base–MRPC (idf)
RBERT–Base–MRPC (idf)
FBERT–Base–MRPC (idf)
PBERT–Large
RBERT–Large
FBERT–Large
PBERT–Large (idf)
RBERT–Large (idf)
FBERT–Large (idf)
PRoBERTa–Base
RRoBERTa–Base
FRoBERTa–Base
PRoBERTa–Base (idf)
RRoBERTa–Base (idf)
FRoBERTa–Base (idf)
PRoBERTa–Large
RRoBERTa–Large
FRoBERTa–Large
PRoBERTa–Large (idf)
RRoBERTa–Large (idf)
FRoBERTa–Large (idf)
PRoBERTa–Large–MNLI
RRoBERTa–Large–MNLI
FRoBERTa–Large–MNLI
PRoBERTa–Large–MNLI (idf)
RRoBERTa–Large–MNLI (idf)
FRoBERTa–Large–MNLI (idf)
PXLNet–Base
RXLNet–Base
FXLNet–Base
PXLNet–Base (idf)
RXLNet–Base (idf)
FXLNet–Base (idf)
PXLNet–Large
RXLNet–Large
FXLNet–Large
PXLNet–Large (idf)
RXLNet–Large (idf)
FXLNet–Large (idf)
PXLM–En
RXLM–En
FXLM–En
PXLM–En (idf)
RXLM–En (idf)
FXLM–En (idf)
Table 30: Area under ROC curve (AUC) on QQP and PAWSQQP datasets. The scores of trained
DecATT (Parikh et al., 2016), DIIN (Gong et al., 2018), and fine-tuned BERT are reported by Zhang et al. (2019). We bold the best task-specific and task-agnostic metrics. Numbers with ∗ are scores on the held-out test set of QQP.